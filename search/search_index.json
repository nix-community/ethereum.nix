{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#what-is-ethereumnix","title":"What is Ethereum.nix?","text":"<p>Ethereum.nix is a collection of Nix packages and NixOS modules designed to make it easier to operate Ethereum related services and infrastructure.</p> <p>For the uninitiated, using Ethereum.nix will give you the following benefits:</p> <ul> <li>Access to a wide range of Ethereum applications packaged with Nix, ready to run without fuss. Nix guarantees you don't have to worry about version conflicts, missing dependencies or even what state your OS is in.</li> <li>We aim that every Ethereum application stored in the repository is constructed from its source, including all input dependencies. This approach guarantees the code's reproducibility and trustworthiness. Furthermore, with Nix, expert users can tweak and adjust the build process to any degree of detail as required.</li> <li>We develop custom NixOS modules to streamline operations with applications such as Execution and Consensus clients (including performing backups). Moreover, we aim to introduce further abstractions that simplify everyday tasks, such as running a production grade Liquid Staking deployment or even a local development environment for running consensus clients and execution clients effortlessly without needing Docker or Kubernetes.</li> </ul> <p>This project is developed entirely in Nix Flakes (but it offers compatibility with legacy Nix thanks to <code>flake-compat</code>).</p>"},{"location":"#eager-to-use-ethereumnix","title":"Eager to use Ethereum.nix?","text":"<ul> <li> <p> New to Ethereum.nix and Nix?</p> <p>Get started by installing Nix on your system and how to use it with Ethereum.nix</p> <p>Getting Started </p> </li> <li> <p> Want to use an application now?</p> <p>See our list of supported applications ready to be used in seconds.</p> <p>See supported Applications </p> </li> <li> <p> Want to run Ethereum services on NixOS?</p> <p>Run Ethereum services easily with our supported NixOS modules.</p> <p>Run Ethereum services on NixOS </p> </li> <li> <p> Have a question or need help?</p> <p>Ask questions on our discussion board and get in touch with our community.</p> <p>Ask a question </p> </li> </ul>"},{"location":"#about-the-project","title":"About the project","text":"<p>In the beginning Ethereum.nix was a playground for Aldo Borrero to experiment with nix'ifying Ethereum related processes. Since then, the project got accepted by the Nix Community incubator program and it has a grown into an ever-increasing number of packages and modules targeted towards streamlining day-to-day operations across a variety of different projects.</p>"},{"location":"#commercial-support","title":"Commercial Support?","text":"<p>Are you seeking to use Ethereum.nix effectively within your organization for Blockchain related projects?</p> <p>Below you can see the list of companies that offers support to Ethereum.nix, Nix and NixOS ecosystem:</p>"},{"location":"#numtide","title":"Numtide","text":"<p>Numtide is a team of independent freelancers that love open source. We help our customers make their project lifecycles more efficient by:</p> <ul> <li>Providing and supporting useful tools such as this one.</li> <li>Building and deploying infrastructure, and offering dedicated DevOps support.</li> <li>Building their in-house Nix skills, and integrating Nix with their workflows.</li> <li>Developing additional features and tools.</li> <li>Carrying out custom research and development.</li> <li>In the case of Blockchain building resilient systems and infrastructure to MEV services.</li> </ul> <p>Contact us if you have a project in mind, or if you need help with any of our supported tools, including this one. We'd love to hear from you.</p>"},{"location":"apps/","title":"Apps","text":"<p>The list of supported apps is growing every day! We plan to keep this list up to date, but, if we have missed any, please let us know!</p> <p>Note</p> <p>Every command has a local and a remote variant. The local variant requires that the command is run from within the cloned repo. The remote variant can be run from wherever.</p> <ul> <li>Local: <code>nix run .#my-app-name</code></li> <li>Remote: <code>nix run github:nix-community/ethereum.nix#my-app-name</code></li> </ul> <p>For brevity and consistency, all the commands are listed in the local variant.</p>"},{"location":"apps/#consensus-clients","title":"Consensus Clients","text":"<p>The consensus client (also known as the Beacon Node, CL client or formerly the Eth2 client) implements the proof-of-stake consensus algorithm, which enables the network to achieve agreement based on validated data from the execution client.</p> App Command Lighthouse <code>nix run .#lighthouse</code> Lodestar Not supported yet. Prysm <code>nix run .#prysm-beacon-chain</code> <code>nix run .#prysm-validator</code> <code>nix run .#prysm-client-stats</code> <code>nix run .#prysm-prysmctl</code> Teku <code>nix run .#teku</code> Nimbus <code>nix run .#teku</code>"},{"location":"apps/#execution-clients","title":"Execution Clients","text":"<p>The execution client (also known as the Execution Engine, EL client or formerly the Eth1 client) listens to new transactions broadcasted in the network, executes them in EVM, and holds the latest state and database of all current Ethereum data.</p> App Command Besu <code>nix run .#besu</code> Erigon <code>nix run .#erigon</code> Geth <code>nix run .#geth</code> <code>nix run .#geth-abidump</code> <code>nix run .#geth-abigen</code> <code>nix run .#geth-blsync</code> <code>nix run .#geth-bootnode</code> <code>nix run .#geth-clef</code> <code>nix run .#geth-devp2p</code> <code>nix run .#geth-ethky</code> <code>nix run .#geth-evm</code> <code>nix run .#geth-faucet</code> <code>nix run .#geth-rlpdump</code> Nethermind <code>nix run .#nethermind-runner</code> <code>nix run .#nethermind</code> Reth <code>nix run .#reth</code>"},{"location":"apps/#dvt-distributed-validator-technology","title":"DVT (Distributed Validator Technology)","text":"<p>Distributed validator technology (DVT) is an approach to validator security that spreads out key management and signing responsibilities across multiple parties, to reduce single points of failure, and increase validator resiliency.</p> App Command Charon <code>nix run .#charon</code> SSVNode <code>nix run .#ssvnode</code>"},{"location":"apps/#editors","title":"Editors","text":""},{"location":"apps/#visual-studio-code-vscode","title":"Visual Studio Code (VSCode)","text":"<p>The following extensions are supported:</p> Extension Command VSCode Solidity Auditor Not available. Tools for Solidity Not available."},{"location":"apps/#mev-maximal-extractable-value","title":"MEV (Maximal Extractable Value)","text":"<p>Maximal extractable value (MEV) refers to the maximum value that can be extracted from block production in excess of the standard block reward and gas fees by including, excluding, and changing the order of transactions in a block.</p> App Command Dreamboat <code>nix run .#dreamboat</code> mev-boost <code>nix run .#mev-boost</code> mev-boost-builder <code>nix run .#mev-boost-builder</code> mev-boost-prysm <code>nix run .#mev-boost-prysm</code> mev-boost-relay <code>nix run .#mev-boost-relay</code> mev-rs <code>nix run .#mev</code>"},{"location":"apps/#solidity","title":"Solidity","text":"<p>Solidity is the most widely used programming language for the EVM. Below you can find tools related to this language:</p> App Command Slither <code>nix run .#sliter</code> Wake <code>nix run .#wake</code>"},{"location":"apps/#signers","title":"Signers","text":"App Command Dirk <code>nix run .#dirk</code> web3signer <code>nix run .#erigon</code>"},{"location":"apps/#utils","title":"Utils","text":"<p>Utilities and applications can't be categorized into any category of the above.</p> App Command eth2-testnet-genesis <code>nix run .#eth2-testnet-genesis</code> ethdo <code>nix run .#ethdo</code> ethereal <code>nix run .#ethereal</code> sedge <code>nix run .#sedge</code> staking-deposit-cli <code>nix run .#staking-deposit-cli</code> tx-fuzz <code>nix run .#tx-fuzz</code> zcli <code>nix run .#zcli</code>"},{"location":"apps/#validators","title":"Validators","text":"<p>Standalone validators clients.</p> App Command Vouch <code>nix run .#vouch</code>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Welcome! It's great to see that you're interested in Nix and also in Ethereum.nix. These installation instructions are intended to have a basic installation of Nix on your system ready to be used alongside Ethereum.nix.</p> <p>Of course, if you're a seasoned Nix user, these installation instructions can be safely skipped (as you probably know what you're doing!).</p> What is exactly Nix? <p>Some people might need clarification on what exactly is Nix. To clarify:</p> <ul> <li>Nix is a cross-platform package manager that utilizes a purely functional deployment model where software is installed into unique directories generated through cryptographic hashes.</li> <li>Nix is also the name of the tool's programming language.</li> <li>NixOS is a Linux distribution based on the Nix package manager.</li> </ul> <p>We recommend you have a look at the following sources to get yourself familiar with the Nix ecosystem and mechanics first before starting with Ethereum.nix:</p> <ul> <li>Zero to Nix: A well-written guide with insightful information about using Nix and several important concepts.</li> <li>Nix Reference Manual: This is a more comprenhensive guide (and also more notoriosly difficult) about Nix.</li> </ul>"},{"location":"getting-started/#installation","title":"Installation","text":"<p>Nix, the package manager, can be installed quite easily using the official installation script. We have left the installation instructions here for your convenience<sup>1</sup>. Still, we recommend looking at the official source should you have more questions or want to customize the installation experience.</p>"},{"location":"getting-started/#on-non-nix-systems-linux-macos-windows-wsl2-docker","title":"On non-Nix systems (Linux, MacOS, Windows WSL2, Docker)","text":"<p>For some systems, there are two installation methods:</p> <ul> <li>Multi user (always recommended).</li> <li>Single user.</li> </ul> Which type of installation should you choose? Multi-user or Single user? <p>This depends on your requirements, but here is a short list of reasons why it's recommended the multi-user installation:</p> <p>Pros:</p> <ul> <li>Better build isolation (and that is what Nix is all about).</li> <li>Better security (a build can not write somewhere in your home).</li> <li>Sharing builds between users.</li> </ul> <p>Cons:</p> <ul> <li>Requires root to run the daemon.</li> <li>More involved installation (creation of <code>nixbld*</code> users, installing a systemd unit, ...).</li> <li>Harder to uninstall.</li> </ul> <p>To run the installer:</p> <code>Linux - Multi-user installation (recommended)</code> <code>Linux - Single user installation</code> <code>macOS</code>:simple-windows11: <code>Windows WSL2 - Multi-user installation</code>:simple-windows11: <code>Windows WSL2 - Single user installation</code> <code>Docker</code> <pre><code>sh &lt;(curl -L https://nixos.org/nix/install) --daemon\n</code></pre> <p>Info</p> <p>We recommend the multi-user install if you are on Linux running systemd, with SELinux disabled and you can authenticate with <code>sudo</code>.</p> <pre><code>sh &lt;(curl -L https://nixos.org/nix/install) --no-daemon\n</code></pre> <p>Info</p> <p>Above command will perform a single-user installation of Nix, meaning that <code>/nix</code> is owned by the invoking user. You should run this under your usual user account, not as <code>root</code>. The script will invoke sudo to create <code>/nix</code> if it doesn\u2019t already exist.</p> <pre><code>sh &lt;(curl -L https://nixos.org/nix/install) --daemon\n</code></pre> <pre><code>sh &lt;(curl -L https://nixos.org/nix/install) --daemon\n</code></pre> <p>Info</p> <p>WSL versions 0.67.6 and above have systemd support. Follow Microsoft's systemd guide to configure it, and then install Nix using</p> <pre><code>sh &lt;(curl -L https://nixos.org/nix/install) --no-daemon\n</code></pre> <p>Start a Docker shell with Nix:</p> <pre><code>docker run -it nixos/nix\n</code></pre> <p>Or start a Docker shell with Nix exposing a <code>workdir</code> directory:</p> <pre><code>mkdir workdir\ndocker run -it -v $(pwd)/workdir:/workdir nixos/nix\n</code></pre> <p>Open a new terminal session, and the nix executable should be in your <code>$PATH</code>. To verify that:</p> <pre><code>nix --version\n</code></pre> <p>This should print the version information for Nix.</p>"},{"location":"getting-started/#on-nixos","title":"On NixOS","text":"<p>If you're running NixOS, you don't need to install Nix, as it's already included!  </p>"},{"location":"getting-started/#enable-flakes-support","title":"Enable Flakes Support","text":"<p>Make sure Nix Flakes functionality is enabled to ease your operations when using Ethereum.nix. </p> <p>Aren't Nix Flakes experimental?</p> <p>Nix flakes are still in the experimental stage within Nix, and there's no defined timeline for their official launch. While we don't expect significant changes to the user interface for flakes during the experimental phase, there could still be some minor changes.</p> <p>We believe that enabling Flakes is the best form of learning Nix for those new to the ecosystem.</p>"},{"location":"getting-started/#on-non-nix-systems-linux-macos-windows-wsl2-docker_1","title":"On non-Nix systems (Linux, MacOS, Windows WSL2, Docker)","text":"<p>Edit (or create) either <code>~/.config/nix/nix.conf</code> or <code>/etc/nix/nix.conf</code> and add the following entry:</p> <pre><code>experimental-features = nix-command flakes\n</code></pre> <p>If the Nix installation is in multi-user mode, don\u2019t forget to restart the <code>nix-daemon</code>.</p> <p>To verify that Nix flakes are enabled just type the following on the terminal:</p> <pre><code>nix show-config | grep flakes\n</code></pre> <p>It should display what we already wrote on the config file:</p> <pre><code>experimental-features = flakes nix-command\n</code></pre>"},{"location":"getting-started/#on-nixos_1","title":"On NixOS","text":"<p>To do so, edit your <code>configuration.nix</code> and add the following:</p> <code>configuration.nix</code> <pre><code>{ pkgs, ... }: {\n  nix.settings.experimental-features = [ \"nix-command\" \"flakes\" ];\n}\n</code></pre> <p>And rebuild your system closure! That's it!</p>"},{"location":"getting-started/#add-ethereumnix-to-your-flake-registry","title":"Add Ethereum.nix to your Flake registry","text":"<p>When dealing with Ethereum.nix, we can use of flakes registries. Flake registries are a convenience feature that allows you to refer to flakes using symbolic identifiers such as <code>nixpkgs</code>, rather than full URLs such as <code>git://github.com/NixOS/nixpkgs</code>. You can use these identifiers on the command line (e.g. when you do <code>nix run nixpkgs#hello</code>) or in flake input specifications in <code>flake.nix</code> files.</p> <p>If you're curious, you can list all registries that are available in your system with the following command:</p> <pre><code>nix registry list\n</code></pre> <p>We do recommend adding Ethereum.nix to your flake registry. To do so:</p> <pre><code>nix registry add enix github:nix-community/ethereum.nix # (1)!\n</code></pre> <p>You can verify that this works by just typing the following:</p> <pre><code>nix run enix#geth -- --version\n</code></pre> <p>After a while (the first invocation, the command will take a little bit), the current version of geth should appear!</p> <ol> <li>You can choose another alias instead of <code>enix</code>. We named it <code>enix</code> because it's short and sweet!</li> </ol> <ol> <li> <p>Thanks to the Nix/NixOS documentation team.\u00a0\u21a9</p> </li> </ol>"},{"location":"license/","title":"License","text":"<p>Copyright (c) 2022-2025 Ethereum.nix contributors</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"contributing/reporting-a-bug/","title":"Reporting a bug","text":"<p>TBW</p>"},{"location":"contributing/reporting-a-change/","title":"Reporting a change","text":"<p>TBW</p>"},{"location":"contributing/reporting-a-docs-issue/","title":"Reporting a docs issue","text":"<p>TBW</p>"},{"location":"nixos/backup-and-restore/","title":"Backup and restore","text":"<p>The following service modules support backups:</p> <ul> <li>Geth</li> <li>Prysm Beacon</li> </ul> <p>Backup and restore functionality is implemented with Restic.</p>"},{"location":"nixos/backup-and-restore/#storage-providers","title":"Storage providers","text":"<p>At the time of writing Restic supports the following storage backends:</p> <ul> <li>Local</li> <li>SFTP</li> <li>REST Server</li> <li>Amazon S3</li> <li>Minio Server</li> <li>Wasabi</li> <li>Alibaba Cloud Object Storage System</li> <li>OpenStack Swift</li> <li>Backblaze B3</li> <li>Microsoft Azure Blob Storage</li> <li>Google Cloud Storage</li> <li>Other services vis RClone</li> </ul>"},{"location":"nixos/backup-and-restore/#configuring-backups","title":"Configuring backups","text":"<p>Backup options are set inside the <code>backup</code> section of supporting modules.</p> backup.nix<pre><code>{ pkgs, ...}: {\n  services.ethereum.geth.sepolia = {\n    ...\n    backup = {\n      enable = true;\n      schedule = \"0/1:00:00\";\n      restic = {\n        repository = \"s3:http://dione:9000/geth-sepolia\";\n        passwordFile = sops.secrets.restic_password.path;\n        environmentFile = sops.secrets.restic_env.path;\n      };\n    };\n  };\n}\n</code></pre> <p>By default, backups are scheduled daily. This can be modified through the schedule option which follows the same format as systemd.time.</p> <p>To access a Restic repository, a password (also called a key) must be specified. This can be done via <code>restic.passwordFile</code>.</p> <p>And since Restic can be configured with a wide variety of storage providers, an environment file can be provided to accommodate their configuration. When using an Amazon S3 backend for example the environment file might look like this:</p> aws.env<pre><code>AWS_DEFAULT_REGION=eu-west-1\nAWS_ACCESS_KEY_ID=my_access_key\nAWS_SECRET_ACCESS_KEY=my_secret_key\n</code></pre> <p>For a detailed list of options please see here.</p>"},{"location":"nixos/backup-and-restore/#systemd-services","title":"Systemd services","text":"<p>When backups are enabled several new Systemd services and timers will be introduced to facilitate the backup process.</p> <p>For an instance of Geth named <code>sepolia</code> for example, the following services will be added:</p> <ul> <li><code>geth-sepolia-metadata.service</code> which captures metadata such as chain height and persists it in the state directory.</li> <li><code>geth-sepolia-metadata.timer</code> which triggers the metadata service every 10 seconds by default. This interval is configurable via metadata.interval.</li> <li><code>geth-sepolia-backup.service</code> which is responsible for stopping <code>geth-sepolia.service</code>, backing up its state directory, and restarting it.</li> <li><code>geth-sepolia-backup.timer</code> which triggers the backup service once daily by default. This schedule is configurable via backup.schedule.</li> </ul>"},{"location":"nixos/backup-and-restore/#restoring-from-backup","title":"Restoring from backup","text":"<p>Restore options are set inside the <code>restore</code> section of supporting modules and share many of the same config options as backups.</p> restore.nix<pre><code>{ pkgs, ...}: {\n  services.ethereum.geth.sepolia = {\n    ...\n    restore = {\n      enable = true;\n      snapshot = \"latest\";\n      restic = {\n        repository = \"s3:http://dione:9000/geth-sepolia\";\n        passwordFile = sops.secrets.restic_password.path;\n        environmentFile = sops.secrets.restic_env.path;\n      };\n    };\n  };\n}\n</code></pre> <p>The one key difference is the <code>snapshot</code> option which details which snapshot to restore from. This can be <code>latest</code> as seen in the example above, or a specific snapshot id as listed by running <code>restic snapshots</code>:</p> <pre><code>\u276f restic snapshots -c | head\nID        Time                 Host    Tags\n-------------------------------------------------------------------------------------------------------------------\n5e2006e9  2023-03-22 07:00:07  phoebe  height:3139753\n                                       number:0x2fe8a9\n                                       stateRoot:0x1be15cbc48fbd1ddb2fee1332f5fd6eacca60a737b4e87874c82be32810b19a5\n                                       hash:0x04a53f7cc92888de4ea743419855abdfff4ba84454db211846d984609578b265\n                                       name:geth-sepolia\nbdf903fc  2023-03-22 08:00:18  phoebe  height:3140008\n                                       number:0x2fe9a8\n                                       stateRoot:0xac1fd086f4e5afe152afd110f67ce86a5787895ca75c3fffa516229fc10ec9b2\n                                       hash:0x330594bc56d97b30c9794f33c692f32f3e29a6de1acb495cc4e66b0a437dc4c3\n                                       name:geth-sepolia\ne83e3f49  2023-03-22 09:00:17  phoebe  height:3140256\n                                       number:0x2feaa0\n                                       stateRoot:0x0a82d296b70638063187208707681d8976769594e65cd823da7429e215cce2a7\n                                       hash:0x6b39cfca2375b0cfb11e59c9f159e7a19108aa25cfbf4a88de53a9c1e089e233\n                                       name:geth-sepolia\n</code></pre> <p>Note: restoring from backup will only be attempted if the state directory for the service in question is empty. The presence of any files will cause the restoration attempt to be aborted.</p> <p>This means it is safe to leave the restore config in place as it only has an effect when initialising a fresh instance.</p>"},{"location":"nixos/installation/","title":"Installation","text":"<p>Below you'll find several examples of how to import Ethereum.nix. Choose appropriately depending on if you're using nix with flakes enabled or not.</p>"},{"location":"nixos/installation/#with-flakes-no-overlays","title":"With flakes without using overlays recommended","text":"<code>flake.nix</code> <pre><code>{\n  inputs = {\n    nixpkgs.url = \"github:nixos/nixpkgs/23.11\";\n    ethereum-nix = {\n      url = \"github:nix-community/ethereum.nix\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n    };\n  };\n\n  outputs = inputs @ { self, ethereum-nix, nixpkgs, ... }: let\n    system = \"x86_64-linux\";\n  in {\n    nixosConfigurations.my-system = nixpkgs.lib.nixosSystem {\n      inherit system;\n      pkgs = nixpkgs.legacyPackages.${system};\n      modules = [\n        # optional: add nixos modules via the default nixosModule\n        ethereum-nix.nixosModules.default\n\n        ({pkgs, system, ...}: {\n          environment.systemPackages = (with ethereum-nix.packages.${system}; [\n            teku\n            lighthouse\n            # ...\n          ]);\n        })\n      ];\n    };\n  };\n}\n</code></pre>"},{"location":"nixos/installation/#with-flakes-overlays","title":"With flakes using overlays","text":"<code>flake.nix</code> <pre><code>{\n  inputs = {\n    nixpkgs.url = \"github:nixos/nixpkgs/23.11\";\n    ethereum-nix = {\n      url = \"github:nix-community/ethereum.nix\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n    };\n  };\n\n  outputs = inputs @ { self, ethereum-nix, nixpkgs, ... }: let\n    system = \"x86_64-linux\";\n\n    pkgs = import inputs.nixpkgs {\n      inherit system;\n      overlays = [\n        # add packages via the default overlay\n        ethereum-nix.overlays.default\n      ];\n    };\n\n  in {\n    nixosConfigurations.my-system = nixpkgs.lib.nixosSystem {\n      inherit system pkgs;\n      modules = [\n        # optional: add nixos modules via the default nixosModule\n        ethereum-nix.nixosModules.default\n      ];\n    };\n  };\n}\n</code></pre>"},{"location":"nixos/installation/#with-pure-nix","title":"With pure nix","text":"<code>default.nix</code> <pre><code>{\n  ethereum-nix ? import (fetchTarball \"https://github.com/nix-community/ethereum.nix/archive/main.tar.gz\"),\n  system ? \"x86_64-linux\",\n  pkgs ?\n    import &lt;nixpkgs&gt; { # (1)!\n      inherit system;\n      overlays = [\n        # add packages via the default overlay\n        ethereum-nix.overlays.default\n      ];\n    },\n}: {\n  my-machine = pkgs.lib.nixosSystem {\n    inherit system pkgs;\n    modules = [\n      # optional: add nixos modules via the default nixosModule\n      ethereum-nix.nixosModules.default\n    ];\n  };\n}\n</code></pre> <ol> <li>You must ensure that your <code>NIX_PATH</code> has <code>nixpkgs</code> pointing to a version that contains nixos modules (e.g. <code>nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixos-23.11.tar.gz</code>)</li> </ol>"},{"location":"nixos/installation/#with-niv","title":"With niv","text":"<p>First, add Ethereum.nix to your <code>sources.json</code>:</p> <pre><code>niv add nix-community/ethereum.nix\n</code></pre> <p>And just import it like below:</p> <pre><code>{system ? builtins.currentSystem}: let\n  sources = import ./sources.nix;\n  ethereum-nix = import sources.\"ethereum.nix\";\n  pkgs = import sources.nixpkgs {\n    inherit system;\n    overlays = [\n      ethereum-nix.overlays.default\n    ];\n  };\nin\n  my-machine = pkgs.lib.nixosSystem {\n    inherit system pkgs;\n    modules = [\n      # optional: add nixos modules via the default nixosModule\n      ethereum-nix.nixosModules.default\n    ];\n  }\n</code></pre>"},{"location":"nixos/restore-from-backup/","title":"Restoring from a backup","text":"<p>The following service modules support restoring from backups:</p> <ul> <li>Geth</li> <li>Prysm Beacon</li> </ul> <p>For an overview of how to configure backups please see here</p>"},{"location":"nixos/restore-from-backup/#basic-configuration","title":"Basic configuration","text":"<p>Restore options are set inside the <code>restore</code> section of supporting modules.</p> server.nix<pre><code>{ pkgs, ...}: {\n  services.ethereum.geth.sepolia = {\n    ...\n    restore = {\n      enable = true;\n      snapshot = \"3090378\";\n\n      borg = {\n        repo = \"ssh://borg@backup.server/data/borgbackup/ethereum/geth-sepolia\";\n        keyPath = \"/root/ed25519\";\n        unencryptedRepoAccess = true;\n      };\n    };\n  };\n}\n</code></pre>"},{"location":"nixos/restore-from-backup/#borg-backup","title":"Borg Backup","text":""},{"location":"nixos/restore-from-backup/#host-key-checking","title":"Host key checking","text":"<p>Borg Backup uses ssh when connecting to a remote repository and as such requires an ssh private key. This key path can be provided via the keyPath option.</p> <p>When connecting to a backup host for the first time a restoration may fail if the provided host key has not been added to the remote machine's known host list.</p> <p>For testing and development purposes this check can be disabled via the strictHostKeyChecking option.</p> <p>For production setups it is recommended to update the remote server's known host list first before any backups are scheduled.</p> server.nix<pre><code>{ pkgs, ...}: {\n  services.ethereum.geth.sepolia = {\n    ...\n\n    restore = {\n      enable = true;\n      snapshot = \"3090378\";\n\n      borg = {\n        repo = \"ssh://borg@dione/data/borgbackup/ethereum/geth-sepolia\";\n        keyPath = \"/root/ed25519\";\n        strictHostKeyChecking = false;\n      };\n    };\n  };\n}\n</code></pre>"},{"location":"nixos/restore-from-backup/#repository-encryption","title":"Repository encryption","text":"<p>There are several encryption schemes available for securing backup repositories.</p> <p>**Note: ** The encryption mode can only be configured when creating a new repository - you can neither configure it on a per-archive basis nor change the encryption mode of an existing repository.</p> <p>For an overview of the encryption schemes available please refer to the borg backup official docs.</p> <p>Suitable corresponding NixOS options for configuring encryption are available.</p>"},{"location":"nixos/running-geth/","title":"Running Geth","text":"<p>One or more Geth services can be configured with the <code>services.ethereum.geth</code> prefix.</p> server.nix<pre><code>{ pkgs, ...}: {\n  services.ethereum.geth.sepolia = {\n    enable = true;\n    package = pkgs.geth;\n    openFirewall = true;\n    args = {\n      syncmode = \"full\";\n      network = \"sepolia\";\n      http = {\n        enable = true;\n        addr = \"0.0.0.0\";\n        vhosts = [\"localhost\" \"phoebe\"];\n        api = [\"net\" \"web3\" \"eth\"];\n      };\n      authrpc.jwtsecret = sops.secrets.geth_jwt_secret.path;\n    };\n    extraArgs = [\n      \"--bootnodes\"\n      \"enode://8ae4559db1b1e160be8cc46018d7db123ed6d03fbbfe481da5ec05f71f0aa4d5f4b02ad059127096aa994568706a0d02933984083b87c5e1e3de2b7692444d37@35.161.233.158:46855,enode://d0b3b290422f35ec3e68356f3a4cdf9c661f71a868110670e31441a5021d7abd0440ae8dfb9360aafdd0198f177863361e3a7a7eb5e1a3e26575bf1ac3ef4ab3@162.19.136.65:48264,enode://d64624bda3cdb65d542c90757a4a661cfe9dddf8328bdb1ea97a8d70fad287c360f0101c492d8fd6ab30d79160a3bf148cacfd68f5d2e47eab0b709516419304@51.195.63.10:30040,enode://c7df835939e027325c6bba926220fae5912a33c83d96b3eef8ef445c98083f3191788581c9a0e8f74cadb0b13229b847f5c1ebd315b22bcf11faf6468020eb48@54.163.51.157:30303,enode://da0609bad3afcab9b93175a41a2d621d07aa7ff6c134a00792d4541f0ce8d30d8f3c51bb37a47573508a0bf18865b04066af2a661edf1d3a3d8d133fc1031aa0@88.151.101.14:45192,enode://7a4534d392c59369eae6befa56ac670476d9edc16597cf53c92bbefa6e741b6b0b9e6822cab12afb09123e03ca1131026fbef145adec429fe2e50182dfb650a5@94.130.18.108:31312,enode://db6fa13b63a885440de581ee3fc8df9c6a590326b39fc5ccba7991707ee0cebac306211f7eca5270a350201a3132511f2338481edd81f3dc819c2a1c60419cf2@65.21.89.157:30303,enode://fcf03e9404cace34c60e4eed374ef9a779471014319b3346352fbc2f992a399af6517486e8e65a4ab55f4645fe55420bbea1cddc13a4af4df63b0f731915c6a6@13.125.238.49:46173,enode://8b973816278fdd56966709e4794c7ccce1f256eaa9165a6b013b991a9bdf3886a8f2d23af50ee723a5614a9fe9d197252b803b4455a87ab2468e128f7b06e0ca@172.104.107.145:30303,enode://5a1fb15f826a213d3ef4adb9be47ab58b2240ea05df0d760a244f04762b0847dcb08276b1284f726c22eea30fce0c601cf121b81bac0c151f1b3b4ad00d1482a@34.159.55.147:51262,enode://560928dd14819f88113586726e452b16bbc694ed4144ddadd6290053e7f3fc66bfad13add6889f7d8f37e0c21ccbb6948eb8899c8b30743f4b45a3081f1efed8@34.138.254.5:29888,enode://69a13b575b8c5278431409e9f7db36e7218667ae286bfb65a72dfec9201b2c5bbbe2797a1babbdf17a7bf7ca68fa3fbe1554612637eb1b2425fa975e1bccb54c@35.223.41.3:30303,enode://66158b31eecff939f220b291d2b448edbfe94f1d4c992d9395b5d476e55e54b5abd11d3ee44daf1e18ee27b910ef99cdf6f19775eb4820ebe4f77d7aa948e3b6@51.195.63.10:55198,enode://bf94acbd51170bf075cacb9f149b21ff46354d659ab434a0d40688f776e1e1556bc62be2dc2867ba513844268c0dc8240099a6b60efe1713fbc25da7fdeb6ff1@3.82.105.139:30303,enode://41329e5ceb51cdddbe6a475db00b682505768b71ff8ee37d2d3500ca1b78918f9fad57d6006dd9f79cd418437dbcf87ec2fd58d60710f925cb17da05a51197cf@65.21.34.60:30303\"\n    ];\n  };\n\n  services.ethereum.geth.goerli = {\n    enable = true;\n    ...\n  };\n}\n</code></pre> <p>Note: It is recommended to use an attribute name that matches the network that Geth is configured for.</p>"},{"location":"nixos/running-geth/#configuration","title":"Configuration","text":"<p>Many of Geth's process arguments have been mapped to NixOS types and can be provided via the <code>args</code> section of the config. For a detailed list please refer to the NixOS Options reference.</p> <p>Additional arguments can be provided in a list directly to the Geth process via the <code>extraArgs</code> attribute as shown above.</p>"},{"location":"nixos/running-geth/#systemd-service","title":"Systemd service","text":"<p>For each instance that is configured a corresponding Systemd service is created. The service name follows a convention of <code>geth-${name}.service</code>.</p> Config Name Service name <code>services.ethereum.geth.sepolia</code> sepolia <code>geth-sepolia.service</code> <code>services.ethereum.geth.goerli</code> goerli <code>geth-goerli.service</code> <code>services.ethereum.geth.mainnet</code> mainnet <code>geth-mainnet.service</code> <p>The service that is created can then be introspected and managed via the standard Systemd toolset.</p> Action Command Status <code>systemctl status geth-sepolia.service</code> Stop <code>systemctl stop geth-sepolia.service</code> Start <code>systemctl start geth-sepolia.service</code> Restart <code>systemctl restart geth-sepolia.service</code> Logs <code>journalctl -xefu geth-sepolia.service</code>"},{"location":"nixos/running-geth/#using-a-geth-fork","title":"Using a Geth fork","text":"<p>A different version of Geth can be configured via the package option.</p> <p>To configure Geth Sealer for example:</p> server.nix<pre><code>{ pkgs, ...}: {\n  services.ethereum.geth.sepolia = {\n    enable = true;\n    package = pkgs.geth-sealer;\n    ...\n  };\n}\n</code></pre>"},{"location":"nixos/running-geth/#opening-ports","title":"Opening ports","text":"<p>By default, openFirewall is set to <code>false</code>. If set to <code>true</code>, firewall rules are added which will expose the following ports:</p> Protocol Config Default value TCP, UDP port 30303 TCP authrpc.port 8551 TCP http.port 8545 TCP ws.port 8546 TCP metrics.port 6060 <p>Note: it is important when running multiple instances of Geth on the same machine that you ensure they are configured with different ports.</p>"},{"location":"nixos/running-lighthouse-beacon/","title":"Running Lighthouse Beacon","text":"<p>One or more Lighthouse Beacon services can be configured with the <code>services.ethereum.lighthouse-beacon</code> prefix.</p> server.nix<pre><code>{ pkgs, ...}: {\n  services.ethereum.lighthouse-beacon.sepolia = {\n    enable = true;\n    openFirewall = true;\n    args = {\n      network = \"sepolia\"; # (Optional) defaults to beacon name\n      execution-jwt = secrets.lighthouse_jwt_secret.path;\n      checkpoint-sync-url = \"https://sepolia.checkpoint-sync.ethdevops.io\";\n      genesis-state-url = \"https://sepolia.checkpoint-sync.ethdevops.io\";\n    };\n    http-address = \"0.0.0.0\";\n  };\n\n  services.ethereum.lighthouse-beacon.goerli = {\n    enable = true;\n    ...\n  };\n}\n</code></pre> <p>Note: It is recommended to use an attribute name that matches the network that Lighthouse Beacon is configured for.</p>"},{"location":"nixos/running-lighthouse-beacon/#configuration","title":"Configuration","text":"<p>Many of Lighthouse Beacon's process arguments have been mapped to NixOS types and can be provided via the <code>args</code> section of the config. For a detailed list please refer to the NixOS Options reference.</p> <p>Additional arguments can be provided in a list directly to the Lighthouse Beacon process via the <code>extraArgs</code> attribute as shown above.</p>"},{"location":"nixos/running-lighthouse-beacon/#systemd-service","title":"Systemd service","text":"<p>For each instance that is configured a corresponding Systemd service is created. The service name follows a convention of <code>lighthouse-beacon-${name}.service</code>.</p> Config Name Service name <code>services.ethereum.lighthouse-beacon.sepolia</code> sepolia <code>lighthouse-beacon-sepolia.service</code> <code>services.ethereum.lighthouse-beacon.goerli</code> goerli <code>lighthouse-beacon-goerli.service</code> <code>services.ethereum.lighthouse-beacon.mainnet</code> mainnet <code>lighthouse-beacon-mainnet.service</code> <p>The service that is created can then be introspected and managed via the standard Systemd toolset.</p> Action Command Status <code>systemctl status lighthouse-beacon-sepolia.service</code> Stop <code>systemctl stop lighthouse-beacon-sepolia.service</code> Start <code>systemctl start lighthouse-beacon-sepolia.service</code> Restart <code>systemctl restart lighthouse-beacon-sepolia.service</code> Logs <code>journalctl -xefu lighthouse-beacon-sepolia.service</code>"},{"location":"nixos/running-lighthouse-beacon/#using-a-lighthouse-beacon-fork","title":"Using a Lighthouse Beacon fork","text":"<p>A different version of Lighthouse Beacon can be configured via the package option.</p> <p>To configure a custom fork for example:</p> server.nix<pre><code>{ pkgs, ...}: {\n  services.ethereum.lighthouse-beacon.sepolia = {\n    enable = true;\n    package = pkgs.my-lighthouse-beacon;\n    ...\n  };\n}\n</code></pre>"},{"location":"nixos/running-lighthouse-beacon/#opening-ports","title":"Opening ports","text":"<p>By default, openFirewall is set to <code>false</code>. If set to <code>true</code> firewall rules are added which will expose the following ports:</p> Protocol Config Default value UDP discovery-port 9000 UDP/TCP quic-port 9001 TCP http-port 5052 <p>Note: it is important when running multiple instances of Lighthouse Beacon on the same machine that you ensure they are configured with different ports.</p>"},{"location":"nixos/running-nimbus-beacon/","title":"Running Nimbus Beacon","text":"<p>One or more Nimbus Beacon services can be configured with the <code>services.ethereum.nimbus-beacon</code> prefix.</p> server.nix<pre><code>{ pkgs, ...}: {\n  services.ethereum.nimbus-beacon.mainnet = {\n    enable = true;\n    openFirewall = true;\n    args = {\n      network = \"mainnet\";\n      jwt-secret = secrets.nimbus_jwt_secret.path;\n      trusted-node-url = \"https://sync.invis.tools\";\n      rest.enable = true;\n    };\n  };\n  };\n}\n</code></pre> <p>Note: It is recommended to use an attribute name that matches the network that Nimbus Beacon is configured for. Unless the network option is set, the Nimbus Beacon node network will default to the name, eg. <code>services.ethereum.nimbus-beacon.mainnet</code> will connect to Ethereum mainnet.</p>"},{"location":"nixos/running-nimbus-beacon/#configuration","title":"Configuration","text":"<p>Many of Nimbus's process arguments have been mapped to NixOS types and can be provided via the <code>args</code> section of the config. For a detailed list please refer to the NixOS Options reference.</p> <p>Additional arguments can be provided in a list directly to the Nimbus Beacon process via the <code>extraArgs</code> attribute as shown above.</p>"},{"location":"nixos/running-nimbus-beacon/#systemd-service","title":"Systemd service","text":"<p>For each instance that is configured a corresponding Systemd service is created. The service name follows a convention of <code>nimbus-beacon-${name}.service</code>.</p> Config Name Service name <code>services.ethereum.nimbus-beacon.sepolia</code> sepolia <code>nimbus-beacon-sepolia.service</code> <code>services.ethereum.nimbus-beacon.holesky</code> holesky <code>nimbus-beacon-holesky.service</code> <code>services.ethereum.nimbus-beacon.mainnet</code> mainnet <code>nimbus-beacon-mainnet.service</code> <p>The service that is created can then be introspected and managed via the standard Systemd toolset.</p> Action Command Status <code>systemctl status nimbus-beacon-sepolia.service</code> Stop <code>systemctl stop nimbus-beacon-sepolia.service</code> Start <code>systemctl start nimbus-beacon-sepolia.service</code> Restart <code>systemctl restart nimbus-beacon-sepolia.service</code> Logs <code>journalctl -xefu nimbus-beacon-sepolia.service</code>"},{"location":"nixos/running-nimbus-beacon/#checkpoint-sync","title":"Checkpoint Sync","text":"<p>Nimbus can be configured to checkpoint sync from a trusted beacon node URL using the trusted-node-url option. See The Nimbus Guide for more information.</p> <p>When configured, on first startup, Nimbus will download the checkpoint from the configured URL. Subsequent startups will skip this step.</p> <p>Note: Always verify after after a checkpoint sync that the right chain was provided by the node. Instructions to do so are included in the above Nimbus Guide link.</p>"},{"location":"nixos/running-nimbus-beacon/#using-a-nimbus-beacon-fork","title":"Using a Nimbus Beacon fork","text":"<p>A different version of Nimbus Beacon can be configured via the package option.</p> <p>To configure a custom fork for example:</p> server.nix<pre><code>{ pkgs, ...}: {\n  services.ethereum.nimbus-beacon.sepolia = {\n    enable = true;\n    package = pkgs.my-nimbus-beacon;\n    ...\n  };\n}\n</code></pre>"},{"location":"nixos/running-nimbus-beacon/#opening-ports","title":"Opening ports","text":"<p>By default, openFirewall is set to <code>false</code>. If set to <code>true</code> firewall rules are added which will expose the following ports:</p> Protocol Config Default value TCP tcp-port 9000 UDP udp-port 9000 TCP rest-port 5052 <p>Note: it is important when running multiple instances of Nimbus Beacon on the same machine that you ensure they are configured with different ports.</p>"},{"location":"nixos/running-prysm-beacon/","title":"Running Prysm Beacon","text":"<p>One or more Prysm Beacon services can be configured with the <code>services.ethereum.prysm-beacon</code> prefix.</p> server.nix<pre><code>{ pkgs, ...}: {\n  services.ethereum.prysm-beacon.sepolia = {\n    enable = true;\n    openFirewall = true;\n    args = {\n      network = \"sepolia\";\n      jwt-secret = secrets.prysm_jwt_secret.path;\n      checkpoint-sync-url = \"https://sepolia.checkpoint-sync.ethdevops.io\";\n      genesis-beacon-api-url = \"https://sepolia.checkpoint-sync.ethdevops.io\";\n    };\n    extraArgs = [\n      \"--rpc-host=0.0.0.0\"\n      \"--monitoring-host=0.0.0.0\"\n    ];\n  };\n\n  services.ethereum.prysm-beacon.goerli = {\n    enable = true;\n    ...\n  };\n}\n</code></pre> <p>Note: It is recommended to use an attribute name that matches the network that Prysm Beacon is configured for.</p>"},{"location":"nixos/running-prysm-beacon/#configuration","title":"Configuration","text":"<p>Many of Prysm Beacon's process arguments have been mapped to NixOS types and can be provided via the <code>args</code> section of the config. For a detailed list please refer to the NixOS Options reference.</p> <p>Additional arguments can be provided in a list directly to the Prysm Beacon process via the <code>extraArgs</code> attribute as shown above.</p>"},{"location":"nixos/running-prysm-beacon/#systemd-service","title":"Systemd service","text":"<p>For each instance that is configured a corresponding Systemd service is created. The service name follows a convention of <code>prysm-beacon-${name}.service</code>.</p> Config Name Service name <code>services.ethereum.prysm-beacon.sepolia</code> sepolia <code>prysm-beacon-sepolia.service</code> <code>services.ethereum.prysm-beacon.goerli</code> goerli <code>prysm-beacon-goerli.service</code> <code>services.ethereum.prysm-beacon.mainnet</code> mainnet <code>prysm-beacon-mainnet.service</code> <p>The service that is created can then be introspected and managed via the standard Systemd toolset.</p> Action Command Status <code>systemctl status prysm-beacon-sepolia.service</code> Stop <code>systemctl stop prysm-beacon-sepolia.service</code> Start <code>systemctl start prysm-beacon-sepolia.service</code> Restart <code>systemctl restart prysm-beacon-sepolia.service</code> Logs <code>journalctl -xefu prysm-beacon-sepolia.service</code>"},{"location":"nixos/running-prysm-beacon/#using-a-prysm-beacon-fork","title":"Using a Prysm Beacon fork","text":"<p>A different version of Prysm Beacon can be configured via the package option.</p> <p>To configure a custom fork for example:</p> server.nix<pre><code>{ pkgs, ...}: {\n  services.ethereum.prysm-beacon.sepolia = {\n    enable = true;\n    package = pkgs.my-prysm-beacon;\n    ...\n  };\n}\n</code></pre>"},{"location":"nixos/running-prysm-beacon/#opening-ports","title":"Opening ports","text":"<p>By default, openFirewall is set to <code>false</code>. If set to <code>true</code> firewall rules are added which will expose the following ports:</p> Protocol Config Default value UDP p2p-udp-port 12000 TCP p2p-tcp-port 13000 TCP grpc-gateway-port 3500 TCP monitoring-port 8080 TCP pprofport 8080 <p>Note: it is important when running multiple instances of Prysm Beacon on the same machine that you ensure they are configured with different ports.</p>"},{"location":"nixos/modules/erigon/","title":"Erigon","text":""},{"location":"nixos/modules/erigon/#_moduleargs","title":"<code>_module.args</code>","text":"<p>Snippet</p> <pre><code>_module.args\n</code></pre> <p>Parameter</p> Type Description Default lazy attribute set of raw value"},{"location":"nixos/modules/erigon/#servicesethereumerigon","title":"<code>services.ethereum.erigon</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon\n</code></pre> <p>Parameter</p> Type Description Default attribute set of (submodule) { }"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsauthrpcaddr","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.addr\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsauthrpcjwtsecret","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.jwtsecret</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.jwtsecret\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsauthrpcport","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 8551"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsauthrpctimeoutsidle","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.timeouts.idle</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.timeouts.idle\n</code></pre> <p>Parameter</p> Type Description Default string \"2m0s\""},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsauthrpctimeoutsread","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.timeouts.read</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.timeouts.read\n</code></pre> <p>Parameter</p> Type Description Default string \"30s\""},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsauthrpctimeoutswrite","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.timeouts.write</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.timeouts.write\n</code></pre> <p>Parameter</p> Type Description Default string \"30m0s\""},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsauthrpcvhosts","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.vhosts</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.authrpc.vhosts\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"localhost\" ]"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargschain","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.chain</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.chain\n</code></pre> <p>Parameter</p> Type Description Default one of \"mainnet\", \"rinkeby\", \"goerli\", \"holesky\", \"sokol\", \"fermion\", \"mumbai\", \"bor-mainnet\", \"bor-devnet\", \"sepolia\", \"gnosis\", \"chiado\" \"mainnet\""},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsdatadir","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.datadir</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.datadir\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsexternalcl","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.externalcl</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.externalcl\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargshttpaddr","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.http.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.http.addr\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargshttpapi","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.http.api</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.http.api\n</code></pre> <p>Parameter</p> Type Description Default null or (list of string)"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargshttpcompression","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.http.compression</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.http.compression\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargshttpcorsdomain","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.http.corsdomain</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.http.corsdomain\n</code></pre> <p>Parameter</p> Type Description Default null or (list of string) null"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargshttpenable","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.http.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.http.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean true"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargshttpport","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.http.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.http.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 8545"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargshttptimeoutsidle","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.http.timeouts.idle</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.http.timeouts.idle\n</code></pre> <p>Parameter</p> Type Description Default string \"2m0s\""},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargshttptimeoutsread","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.http.timeouts.read</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.http.timeouts.read\n</code></pre> <p>Parameter</p> Type Description Default string \"30s\""},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargshttptimeoutswrite","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.http.timeouts.write</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.http.timeouts.write\n</code></pre> <p>Parameter</p> Type Description Default string \"30m0s\""},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargshttptrace","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.http.trace</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.http.trace\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargshttpvhosts","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.http.vhosts</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.http.vhosts\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"localhost\" ]"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsmetricsaddr","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.metrics.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.metrics.addr\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsmetricsenable","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.metrics.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.metrics.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsmetricsport","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.metrics.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.metrics.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 6060"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsport","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 30303"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsprivateapiaddr","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.private.api.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.private.api.addr\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1:9090\""},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargsprivateapiratelimit","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.private.api.ratelimit</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.private.api.ratelimit\n</code></pre> <p>Parameter</p> Type Description Default signed integer 31872"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargssnapshots","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.snapshots</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.snapshots\n</code></pre> <p>Parameter</p> Type Description Default boolean true"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargstorrentport","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.torrent.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.torrent.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 42069"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargswscompression","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.ws.compression</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.ws.compression\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameargswsenable","title":"<code>services.ethereum.erigon.&lt;name&gt;.args.ws.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.args.ws.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameenable","title":"<code>services.ethereum.erigon.&lt;name&gt;.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameextraargs","title":"<code>services.ethereum.erigon.&lt;name&gt;.extraArgs</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.extraArgs\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameopenfirewall","title":"<code>services.ethereum.erigon.&lt;name&gt;.openFirewall</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.openFirewall\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/erigon/#servicesethereumerigonnamepackage","title":"<code>services.ethereum.erigon.&lt;name&gt;.package</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.package\n</code></pre> <p>Parameter</p> Type Description Default package pkgs.erigon"},{"location":"nixos/modules/erigon/#servicesethereumerigonnameservicesupplementarygroups","title":"<code>services.ethereum.erigon.&lt;name&gt;.service.supplementaryGroups</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.service.supplementaryGroups\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/erigon/#servicesethereumerigonnamesubvolume","title":"<code>services.ethereum.erigon.&lt;name&gt;.subVolume</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.erigon.&lt;name&gt;.subVolume\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/geth-bootnode/","title":"Geth bootnode","text":""},{"location":"nixos/modules/geth-bootnode/#_moduleargs","title":"<code>_module.args</code>","text":"<p>Snippet</p> <pre><code>_module.args\n</code></pre> <p>Parameter</p> Type Description Default lazy attribute set of raw value"},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnode","title":"<code>services.ethereum.geth-bootnode</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode\n</code></pre> <p>Parameter</p> Type Description Default attribute set of (submodule) { }"},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenameargsaddr","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.args.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.args.addr\n</code></pre> <p>Parameter</p> Type Description Default string \":30301\""},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenameargsgenkey","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.args.genkey</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.args.genkey\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenameargsnat","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.args.nat</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.args.nat\n</code></pre> <p>Parameter</p> Type Description Default string \"none\""},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenameargsnetrestrict","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.args.netrestrict</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.args.netrestrict\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenameargsnodekey","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.args.nodekey</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.args.nodekey\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenameargsnodekeyhex","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.args.nodekeyhex</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.args.nodekeyhex\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenameargsv5","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.args.v5</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.args.v5\n</code></pre> <p>Parameter</p> Type Description Default null or boolean null"},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenameargsverbosity","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.args.verbosity</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.args.verbosity\n</code></pre> <p>Parameter</p> Type Description Default integer between 0 and 5 (both inclusive) 3"},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenameargsvmodule","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.args.vmodule</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.args.vmodule\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenameargswriteaddress","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.args.writeaddress</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.args.writeaddress\n</code></pre> <p>Parameter</p> Type Description Default null or boolean null"},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenameenable","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenameextraargs","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.extraArgs</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.extraArgs\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenameopenfirewall","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.openFirewall</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.openFirewall\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/geth-bootnode/#servicesethereumgeth-bootnodenamepackage","title":"<code>services.ethereum.geth-bootnode.&lt;name&gt;.package</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth-bootnode.&lt;name&gt;.package\n</code></pre> <p>Parameter</p> Type Description Default package pkgs.geth"},{"location":"nixos/modules/geth/","title":"Geth","text":""},{"location":"nixos/modules/geth/#_moduleargs","title":"<code>_module.args</code>","text":"<p>Snippet</p> <pre><code>_module.args\n</code></pre> <p>Parameter</p> Type Description Default lazy attribute set of raw value"},{"location":"nixos/modules/geth/#servicesethereumgeth","title":"<code>services.ethereum.geth</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth\n</code></pre> <p>Parameter</p> Type Description Default attribute set of (submodule) { }"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsauthrpcaddr","title":"<code>services.ethereum.geth.&lt;name&gt;.args.authrpc.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.authrpc.addr\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/geth/#servicesethereumgethnameargsauthrpcjwtsecret","title":"<code>services.ethereum.geth.&lt;name&gt;.args.authrpc.jwtsecret</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.authrpc.jwtsecret\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsauthrpcport","title":"<code>services.ethereum.geth.&lt;name&gt;.args.authrpc.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.authrpc.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 8551"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsauthrpcvhosts","title":"<code>services.ethereum.geth.&lt;name&gt;.args.authrpc.vhosts</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.authrpc.vhosts\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"localhost\" ]"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsbootnodes","title":"<code>services.ethereum.geth.&lt;name&gt;.args.bootnodes</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.bootnodes\n</code></pre> <p>Parameter</p> Type Description Default null or (list of string) null"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsdatadir","title":"<code>services.ethereum.geth.&lt;name&gt;.args.datadir</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.datadir\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsgcmode","title":"<code>services.ethereum.geth.&lt;name&gt;.args.gcmode</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.gcmode\n</code></pre> <p>Parameter</p> Type Description Default one of \"full\", \"archive\" \"full\""},{"location":"nixos/modules/geth/#servicesethereumgethnameargshttpaddr","title":"<code>services.ethereum.geth.&lt;name&gt;.args.http.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.http.addr\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/geth/#servicesethereumgethnameargshttpapi","title":"<code>services.ethereum.geth.&lt;name&gt;.args.http.api</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.http.api\n</code></pre> <p>Parameter</p> Type Description Default null or (list of string) null"},{"location":"nixos/modules/geth/#servicesethereumgethnameargshttpcorsdomain","title":"<code>services.ethereum.geth.&lt;name&gt;.args.http.corsdomain</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.http.corsdomain\n</code></pre> <p>Parameter</p> Type Description Default null or (list of string) null"},{"location":"nixos/modules/geth/#servicesethereumgethnameargshttpenable","title":"<code>services.ethereum.geth.&lt;name&gt;.args.http.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.http.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/geth/#servicesethereumgethnameargshttpport","title":"<code>services.ethereum.geth.&lt;name&gt;.args.http.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.http.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 8545"},{"location":"nixos/modules/geth/#servicesethereumgethnameargshttprpcprefix","title":"<code>services.ethereum.geth.&lt;name&gt;.args.http.rpcprefix</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.http.rpcprefix\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/geth/#servicesethereumgethnameargshttpvhosts","title":"<code>services.ethereum.geth.&lt;name&gt;.args.http.vhosts</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.http.vhosts\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"localhost\" ]"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsmaxpeers","title":"<code>services.ethereum.geth.&lt;name&gt;.args.maxpeers</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.maxpeers\n</code></pre> <p>Parameter</p> Type Description Default signed integer 50"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsmetricsaddr","title":"<code>services.ethereum.geth.&lt;name&gt;.args.metrics.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.metrics.addr\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/geth/#servicesethereumgethnameargsmetricsenable","title":"<code>services.ethereum.geth.&lt;name&gt;.args.metrics.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.metrics.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsmetricsport","title":"<code>services.ethereum.geth.&lt;name&gt;.args.metrics.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.metrics.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 6060"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsnetrestrict","title":"<code>services.ethereum.geth.&lt;name&gt;.args.netrestrict</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.netrestrict\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsnetwork","title":"<code>services.ethereum.geth.&lt;name&gt;.args.network</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.network\n</code></pre> <p>Parameter</p> Type Description Default null or one of \"goerli\", \"holesky\", \"kiln\", \"rinkeby\", \"ropsten\", \"sepolia\" null"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsnetworkid","title":"<code>services.ethereum.geth.&lt;name&gt;.args.networkid</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.networkid\n</code></pre> <p>Parameter</p> Type Description Default signed integer 1"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsnodiscover","title":"<code>services.ethereum.geth.&lt;name&gt;.args.nodiscover</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.nodiscover\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/geth/#servicesethereumgethnameargsport","title":"<code>services.ethereum.geth.&lt;name&gt;.args.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 30303"},{"location":"nixos/modules/geth/#servicesethereumgethnameargssyncmode","title":"<code>services.ethereum.geth.&lt;name&gt;.args.syncmode</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.syncmode\n</code></pre> <p>Parameter</p> Type Description Default one of \"snap\", \"fast\", \"full\", \"light\" \"snap\""},{"location":"nixos/modules/geth/#servicesethereumgethnameargsverbosity","title":"<code>services.ethereum.geth.&lt;name&gt;.args.verbosity</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.verbosity\n</code></pre> <p>Parameter</p> Type Description Default integer between 0 and 5 (both inclusive) 3"},{"location":"nixos/modules/geth/#servicesethereumgethnameargswsaddr","title":"<code>services.ethereum.geth.&lt;name&gt;.args.ws.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.ws.addr\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/geth/#servicesethereumgethnameargswsapi","title":"<code>services.ethereum.geth.&lt;name&gt;.args.ws.api</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.ws.api\n</code></pre> <p>Parameter</p> Type Description Default null or (list of string) null"},{"location":"nixos/modules/geth/#servicesethereumgethnameargswsenable","title":"<code>services.ethereum.geth.&lt;name&gt;.args.ws.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.ws.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/geth/#servicesethereumgethnameargswsport","title":"<code>services.ethereum.geth.&lt;name&gt;.args.ws.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.args.ws.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 8546"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupbtrfsenable","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.btrfs.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.btrfs.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupbtrfssnapshotdirectory","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.btrfs.snapshotDirectory</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.btrfs.snapshotDirectory\n</code></pre> <p>Parameter</p> Type Description Default path \"/snapshots\""},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupbtrfssnapshotretention","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.btrfs.snapshotRetention</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.btrfs.snapshotRetention\n</code></pre> <p>Parameter</p> Type Description Default signed integer 7"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupenable","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupmetadatainterval","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.metadata.interval</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.metadata.interval\n</code></pre> <p>Parameter</p> Type Description Default integer between 1 and 60 (both inclusive) 10"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupresticenvironmentfile","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupresticexclude","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupresticextraoptions","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupresticpasswordfile","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupresticrcloneconfig","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupresticrcloneconfigfile","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupresticrcloneoptions","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupresticrepository","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupresticrepositoryfile","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/geth/#servicesethereumgethnamebackupschedule","title":"<code>services.ethereum.geth.&lt;name&gt;.backup.schedule</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.backup.schedule\n</code></pre> <p>Parameter</p> Type Description Default string \"hourly\""},{"location":"nixos/modules/geth/#servicesethereumgethnameenable","title":"<code>services.ethereum.geth.&lt;name&gt;.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/geth/#servicesethereumgethnameextraargs","title":"<code>services.ethereum.geth.&lt;name&gt;.extraArgs</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.extraArgs\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/geth/#servicesethereumgethnameopenfirewall","title":"<code>services.ethereum.geth.&lt;name&gt;.openFirewall</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.openFirewall\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/geth/#servicesethereumgethnamepackage","title":"<code>services.ethereum.geth.&lt;name&gt;.package</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.package\n</code></pre> <p>Parameter</p> Type Description Default package pkgs.geth"},{"location":"nixos/modules/geth/#servicesethereumgethnamerestoreenable","title":"<code>services.ethereum.geth.&lt;name&gt;.restore.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.restore.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/geth/#servicesethereumgethnamerestoreresticenvironmentfile","title":"<code>services.ethereum.geth.&lt;name&gt;.restore.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.restore.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/geth/#servicesethereumgethnamerestoreresticexclude","title":"<code>services.ethereum.geth.&lt;name&gt;.restore.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.restore.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/geth/#servicesethereumgethnamerestoreresticextraoptions","title":"<code>services.ethereum.geth.&lt;name&gt;.restore.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.restore.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/geth/#servicesethereumgethnamerestoreresticpasswordfile","title":"<code>services.ethereum.geth.&lt;name&gt;.restore.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.restore.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/geth/#servicesethereumgethnamerestoreresticrcloneconfig","title":"<code>services.ethereum.geth.&lt;name&gt;.restore.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.restore.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/geth/#servicesethereumgethnamerestoreresticrcloneconfigfile","title":"<code>services.ethereum.geth.&lt;name&gt;.restore.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.restore.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/geth/#servicesethereumgethnamerestoreresticrcloneoptions","title":"<code>services.ethereum.geth.&lt;name&gt;.restore.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.restore.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/geth/#servicesethereumgethnamerestoreresticrepository","title":"<code>services.ethereum.geth.&lt;name&gt;.restore.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.restore.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/geth/#servicesethereumgethnamerestoreresticrepositoryfile","title":"<code>services.ethereum.geth.&lt;name&gt;.restore.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.restore.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/geth/#servicesethereumgethnamerestoresnapshot","title":"<code>services.ethereum.geth.&lt;name&gt;.restore.snapshot</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.restore.snapshot\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/geth/#servicesethereumgethnamerestoretimeout","title":"<code>services.ethereum.geth.&lt;name&gt;.restore.timeout</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.geth.&lt;name&gt;.restore.timeout\n</code></pre> <p>Parameter</p> Type Description Default signed integer 600"},{"location":"nixos/modules/lighthouse-beacon/","title":"Lighthouse beacon","text":""},{"location":"nixos/modules/lighthouse-beacon/#_moduleargs","title":"<code>_module.args</code>","text":"<p>Snippet</p> <pre><code>_module.args\n</code></pre> <p>Parameter</p> Type Description Default lazy attribute set of raw value"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beacon","title":"<code>services.ethereum.lighthouse-beacon</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon\n</code></pre> <p>Parameter</p> Type Description Default attribute set of (submodule) { }"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargscheckpoint-sync-url","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.checkpoint-sync-url</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.checkpoint-sync-url\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsdatadir","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.datadir</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.datadir\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsdisable-deposit-contract-sync","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.disable-deposit-contract-sync</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.disable-deposit-contract-sync\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsdisable-quic","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.disable-quic</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.disable-quic\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsdisable-upnp","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.disable-upnp</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.disable-upnp\n</code></pre> <p>Parameter</p> Type Description Default boolean true"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsdiscovery-port","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.discovery-port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.discovery-port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 9000"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsexecution-endpoint","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.execution-endpoint</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.execution-endpoint\n</code></pre> <p>Parameter</p> Type Description Default string \"http://127.0.0.1:8551\""},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsexecution-jwt","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.execution-jwt</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.execution-jwt\n</code></pre> <p>Parameter</p> Type Description Default string null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsgenesis-state-url","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.genesis-state-url</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.genesis-state-url\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargshttpaddress","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.http.address</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.http.address\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargshttpenable","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.http.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.http.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean true"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargshttpport","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.http.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.http.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 5052"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsmetricsaddress","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.metrics.address</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.metrics.address\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsmetricsenable","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.metrics.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.metrics.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean true"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsmetricsport","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.metrics.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.metrics.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 5054"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsnetwork","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.network</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.network\n</code></pre> <p>Parameter</p> Type Description Default null or one of \"mainnet\", \"prater\", \"goerli\", \"gnosis\", \"chiado\", \"sepolia\", \"holesky\" \"name\""},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsquic-port","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.quic-port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.quic-port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) args.discovery-port + 1"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameargsuser","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.user</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.args.user\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupbtrfsenable","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.btrfs.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.btrfs.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupbtrfssnapshotdirectory","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.btrfs.snapshotDirectory</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.btrfs.snapshotDirectory\n</code></pre> <p>Parameter</p> Type Description Default path \"/snapshots\""},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupbtrfssnapshotretention","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.btrfs.snapshotRetention</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.btrfs.snapshotRetention\n</code></pre> <p>Parameter</p> Type Description Default signed integer 7"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupenable","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupmetadatainterval","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.metadata.interval</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.metadata.interval\n</code></pre> <p>Parameter</p> Type Description Default integer between 1 and 60 (both inclusive) 10"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupresticenvironmentfile","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupresticexclude","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupresticextraoptions","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupresticpasswordfile","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupresticrcloneconfig","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupresticrcloneconfigfile","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupresticrcloneoptions","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupresticrepository","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupresticrepositoryfile","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamebackupschedule","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.schedule</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.backup.schedule\n</code></pre> <p>Parameter</p> Type Description Default string \"hourly\""},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameenable","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameextraargs","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.extraArgs</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.extraArgs\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnameopenfirewall","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.openFirewall</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.openFirewall\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamepackage","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.package</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.package\n</code></pre> <p>Parameter</p> Type Description Default package pkgs.lighthouse"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamerestoreenable","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamerestoreresticenvironmentfile","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamerestoreresticexclude","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamerestoreresticextraoptions","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamerestoreresticpasswordfile","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamerestoreresticrcloneconfig","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamerestoreresticrcloneconfigfile","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamerestoreresticrcloneoptions","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamerestoreresticrepository","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamerestoreresticrepositoryfile","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamerestoresnapshot","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.snapshot</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.snapshot\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/lighthouse-beacon/#servicesethereumlighthouse-beaconnamerestoretimeout","title":"<code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.timeout</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-beacon.&lt;name&gt;.restore.timeout\n</code></pre> <p>Parameter</p> Type Description Default signed integer 600"},{"location":"nixos/modules/lighthouse-validator/","title":"Lighthouse validator","text":""},{"location":"nixos/modules/lighthouse-validator/#_moduleargs","title":"<code>_module.args</code>","text":"<p>Snippet</p> <pre><code>_module.args\n</code></pre> <p>Parameter</p> Type Description Default lazy attribute set of raw value"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validator","title":"<code>services.ethereum.lighthouse-validator</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator\n</code></pre> <p>Parameter</p> Type Description Default attribute set of (submodule) { }"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameargsbeacon-nodes","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.beacon-nodes</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.beacon-nodes\n</code></pre> <p>Parameter</p> Type Description Default null or (list of string) null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameargsdatadir","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.datadir</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.datadir\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameargsgraffiti","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.graffiti</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.graffiti\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameargshttpaddress","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.http.address</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.http.address\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameargshttpenable","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.http.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.http.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameargshttpport","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.http.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.http.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 5062"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameargsmetricsaddress","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.metrics.address</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.metrics.address\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameargsmetricsenable","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.metrics.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.metrics.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean true"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameargsmetricsport","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.metrics.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.metrics.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 5064"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameargsnetwork","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.network</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.network\n</code></pre> <p>Parameter</p> Type Description Default null or one of \"mainnet\", \"prater\", \"goerli\", \"gnosis\", \"chiado\", \"sepolia\", \"holesky\" \"name\""},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameargssuggested-fee-recipient","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.suggested-fee-recipient</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.suggested-fee-recipient\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameargsuser","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.user</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.args.user\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupbtrfsenable","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.btrfs.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.btrfs.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupbtrfssnapshotdirectory","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.btrfs.snapshotDirectory</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.btrfs.snapshotDirectory\n</code></pre> <p>Parameter</p> Type Description Default path \"/snapshots\""},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupbtrfssnapshotretention","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.btrfs.snapshotRetention</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.btrfs.snapshotRetention\n</code></pre> <p>Parameter</p> Type Description Default signed integer 7"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupenable","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupmetadatainterval","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.metadata.interval</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.metadata.interval\n</code></pre> <p>Parameter</p> Type Description Default integer between 1 and 60 (both inclusive) 10"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupresticenvironmentfile","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupresticexclude","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupresticextraoptions","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupresticpasswordfile","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupresticrcloneconfig","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupresticrcloneconfigfile","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupresticrcloneoptions","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupresticrepository","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupresticrepositoryfile","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamebackupschedule","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.schedule</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.backup.schedule\n</code></pre> <p>Parameter</p> Type Description Default string \"hourly\""},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameenable","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameextraargs","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.extraArgs</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.extraArgs\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornameopenfirewall","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.openFirewall</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.openFirewall\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamepackage","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.package</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.package\n</code></pre> <p>Parameter</p> Type Description Default package pkgs.lighthouse"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamerestoreenable","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamerestoreresticenvironmentfile","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamerestoreresticexclude","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamerestoreresticextraoptions","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamerestoreresticpasswordfile","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamerestoreresticrcloneconfig","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamerestoreresticrcloneconfigfile","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamerestoreresticrcloneoptions","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamerestoreresticrepository","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamerestoreresticrepositoryfile","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamerestoresnapshot","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.snapshot</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.snapshot\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/lighthouse-validator/#servicesethereumlighthouse-validatornamerestoretimeout","title":"<code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.timeout</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.lighthouse-validator.&lt;name&gt;.restore.timeout\n</code></pre> <p>Parameter</p> Type Description Default signed integer 600"},{"location":"nixos/modules/mev-boost/","title":"Mev boost","text":""},{"location":"nixos/modules/mev-boost/#_moduleargs","title":"<code>_module.args</code>","text":"<p>Snippet</p> <pre><code>_module.args\n</code></pre> <p>Parameter</p> Type Description Default lazy attribute set of raw value"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boost","title":"<code>services.ethereum.mev-boost</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost\n</code></pre> <p>Parameter</p> Type Description Default attribute set of (submodule) { }"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargsaddr","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.addr\n</code></pre> <p>Parameter</p> Type Description Default string \"localhost:18550\""},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargsjson","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.json</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.json\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargslog-no-version","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.log-no-version</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.log-no-version\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargslog-service","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.log-service</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.log-service\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargsloglevel","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.loglevel</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.loglevel\n</code></pre> <p>Parameter</p> Type Description Default null or one of \"trace\", \"debug\", \"info\", \"warn\", \"error\", \"fatal\", \"panic\" \"info\""},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargsmin-bid","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.min-bid</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.min-bid\n</code></pre> <p>Parameter</p> Type Description Default null or floating point number null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargsnetwork","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.network</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.network\n</code></pre> <p>Parameter</p> Type Description Default null or one of \"mainnet\", \"holesky\", \"sepolia\", \"zhejiang\" null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargsrelay-check","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.relay-check</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.relay-check\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargsrelay-monitors","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.relay-monitors</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.relay-monitors\n</code></pre> <p>Parameter</p> Type Description Default null or (list of string) null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargsrelays","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.relays</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.relays\n</code></pre> <p>Parameter</p> Type Description Default list of string"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargsrequest-max-retries","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.request-max-retries</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.request-max-retries\n</code></pre> <p>Parameter</p> Type Description Default signed integer 5"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargsrequest-timeout-getheader","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.request-timeout-getheader</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.request-timeout-getheader\n</code></pre> <p>Parameter</p> Type Description Default signed integer 950"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargsrequest-timeout-getpayload","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.request-timeout-getpayload</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.request-timeout-getpayload\n</code></pre> <p>Parameter</p> Type Description Default signed integer 4000"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameargsrequest-timeout-regval","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.args.request-timeout-regval</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.args.request-timeout-regval\n</code></pre> <p>Parameter</p> Type Description Default signed integer 3000"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupbtrfsenable","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.btrfs.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.btrfs.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupbtrfssnapshotdirectory","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.btrfs.snapshotDirectory</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.btrfs.snapshotDirectory\n</code></pre> <p>Parameter</p> Type Description Default path \"/snapshots\""},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupbtrfssnapshotretention","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.btrfs.snapshotRetention</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.btrfs.snapshotRetention\n</code></pre> <p>Parameter</p> Type Description Default signed integer 7"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupenable","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupmetadatainterval","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.metadata.interval</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.metadata.interval\n</code></pre> <p>Parameter</p> Type Description Default integer between 1 and 60 (both inclusive) 10"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupresticenvironmentfile","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupresticexclude","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupresticextraoptions","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupresticpasswordfile","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupresticrcloneconfig","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupresticrcloneconfigfile","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupresticrcloneoptions","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupresticrepository","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupresticrepositoryfile","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamebackupschedule","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.backup.schedule</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.backup.schedule\n</code></pre> <p>Parameter</p> Type Description Default string \"hourly\""},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameenable","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnameextraargs","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.extraArgs</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.extraArgs\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamepackage","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.package</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.package\n</code></pre> <p>Parameter</p> Type Description Default package pkgs.mev-boost"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamerestoreenable","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.restore.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.restore.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamerestoreresticenvironmentfile","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamerestoreresticexclude","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamerestoreresticextraoptions","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamerestoreresticpasswordfile","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamerestoreresticrcloneconfig","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamerestoreresticrcloneconfigfile","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamerestoreresticrcloneoptions","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamerestoreresticrepository","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamerestoreresticrepositoryfile","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.restore.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamerestoresnapshot","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.restore.snapshot</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.restore.snapshot\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/mev-boost/#servicesethereummev-boostnamerestoretimeout","title":"<code>services.ethereum.mev-boost.&lt;name&gt;.restore.timeout</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.mev-boost.&lt;name&gt;.restore.timeout\n</code></pre> <p>Parameter</p> Type Description Default signed integer 600"},{"location":"nixos/modules/nethermind/","title":"Nethermind","text":""},{"location":"nixos/modules/nethermind/#_moduleargs","title":"<code>_module.args</code>","text":"<p>Snippet</p> <pre><code>_module.args\n</code></pre> <p>Parameter</p> Type Description Default lazy attribute set of raw value"},{"location":"nixos/modules/nethermind/#servicesethereumnethermind","title":"<code>services.ethereum.nethermind</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind\n</code></pre> <p>Parameter</p> Type Description Default attribute set of (submodule) { }"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsbasedbpath","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.baseDbPath</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.baseDbPath\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsconfig","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.config</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.config\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsconfigsdirectory","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.configsDirectory</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.configsDirectory\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsdatadir","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.datadir</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.datadir\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargslog","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.log</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.log\n</code></pre> <p>Parameter</p> Type Description Default one of \"OFF\", \"TRACE\", \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\" \"INFO\""},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsloggerconfigsource","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.loggerConfigSource</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.loggerConfigSource\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsmoduleshealthchecksenabled","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.modules.HealthChecks.Enabled</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.modules.HealthChecks.Enabled\n</code></pre> <p>Parameter</p> Type Description Default boolean true"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsmodulesjsonrpcenabled","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.Enabled</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.Enabled\n</code></pre> <p>Parameter</p> Type Description Default boolean true"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsmodulesjsonrpcenginehost","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.EngineHost</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.EngineHost\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsmodulesjsonrpcengineport","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.EnginePort</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.EnginePort\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 8551"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsmodulesjsonrpchost","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.Host</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.Host\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsmodulesjsonrpcjwtsecretfile","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.JwtSecretFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.JwtSecretFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsmodulesjsonrpcport","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.Port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.Port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 8545"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsmodulesjsonrpcwebsocketsport","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.WebSocketsPort</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.modules.JsonRpc.WebSocketsPort\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 8545"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsmodulesmetricsenabled","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.modules.Metrics.Enabled</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.modules.Metrics.Enabled\n</code></pre> <p>Parameter</p> Type Description Default boolean true"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsmodulesmetricsexposeport","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.modules.Metrics.ExposePort</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.modules.Metrics.ExposePort\n</code></pre> <p>Parameter</p> Type Description Default null or 16 bit unsigned integer; between 0 and 65535 (both inclusive) null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsmodulesnetworkdiscoveryport","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.modules.Network.DiscoveryPort</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.modules.Network.DiscoveryPort\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 30303"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameargsmodulesnetworkp2pport","title":"<code>services.ethereum.nethermind.&lt;name&gt;.args.modules.Network.P2PPort</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.args.modules.Network.P2PPort\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 30303"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupbtrfsenable","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.btrfs.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.btrfs.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupbtrfssnapshotdirectory","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.btrfs.snapshotDirectory</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.btrfs.snapshotDirectory\n</code></pre> <p>Parameter</p> Type Description Default path \"/snapshots\""},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupbtrfssnapshotretention","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.btrfs.snapshotRetention</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.btrfs.snapshotRetention\n</code></pre> <p>Parameter</p> Type Description Default signed integer 7"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupenable","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupmetadatainterval","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.metadata.interval</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.metadata.interval\n</code></pre> <p>Parameter</p> Type Description Default integer between 1 and 60 (both inclusive) 10"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupresticenvironmentfile","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupresticexclude","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupresticextraoptions","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupresticpasswordfile","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupresticrcloneconfig","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupresticrcloneconfigfile","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupresticrcloneoptions","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupresticrepository","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupresticrepositoryfile","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamebackupschedule","title":"<code>services.ethereum.nethermind.&lt;name&gt;.backup.schedule</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.backup.schedule\n</code></pre> <p>Parameter</p> Type Description Default string \"hourly\""},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameenable","title":"<code>services.ethereum.nethermind.&lt;name&gt;.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameextraargs","title":"<code>services.ethereum.nethermind.&lt;name&gt;.extraArgs</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.extraArgs\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnameopenfirewall","title":"<code>services.ethereum.nethermind.&lt;name&gt;.openFirewall</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.openFirewall\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamepackage","title":"<code>services.ethereum.nethermind.&lt;name&gt;.package</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.package\n</code></pre> <p>Parameter</p> Type Description Default package pkgs.nethermind"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamerestoreenable","title":"<code>services.ethereum.nethermind.&lt;name&gt;.restore.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.restore.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamerestoreresticenvironmentfile","title":"<code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamerestoreresticexclude","title":"<code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamerestoreresticextraoptions","title":"<code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamerestoreresticpasswordfile","title":"<code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamerestoreresticrcloneconfig","title":"<code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamerestoreresticrcloneconfigfile","title":"<code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamerestoreresticrcloneoptions","title":"<code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamerestoreresticrepository","title":"<code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamerestoreresticrepositoryfile","title":"<code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.restore.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamerestoresnapshot","title":"<code>services.ethereum.nethermind.&lt;name&gt;.restore.snapshot</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.restore.snapshot\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/nethermind/#servicesethereumnethermindnamerestoretimeout","title":"<code>services.ethereum.nethermind.&lt;name&gt;.restore.timeout</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nethermind.&lt;name&gt;.restore.timeout\n</code></pre> <p>Parameter</p> Type Description Default signed integer 600"},{"location":"nixos/modules/nimbus-beacon/","title":"Nimbus beacon","text":""},{"location":"nixos/modules/nimbus-beacon/#_moduleargs","title":"<code>_module.args</code>","text":"<p>Snippet</p> <pre><code>_module.args\n</code></pre> <p>Parameter</p> Type Description Default lazy attribute set of raw value"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beacon","title":"<code>services.ethereum.nimbus-beacon</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon\n</code></pre> <p>Parameter</p> Type Description Default attribute set of (submodule) { }"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsdata-dir","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.data-dir</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.data-dir\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsdoppelganger-detection","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.doppelganger-detection</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.doppelganger-detection\n</code></pre> <p>Parameter</p> Type Description Default boolean true"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsel","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.el</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.el\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"http://127.0.0.1:8551\" ]"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsenr-auto-update","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.enr-auto-update</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.enr-auto-update\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsgraffiti","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.graffiti</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.graffiti\n</code></pre> <p>Parameter</p> Type Description Default string \"\""},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargshistory","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.history</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.history\n</code></pre> <p>Parameter</p> Type Description Default null or one of \"archive\", \"prune\" \"prune\""},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsjwt-secret","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.jwt-secret</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.jwt-secret\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargskeymanageraddress","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.keymanager.address</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.keymanager.address\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargskeymanagerenable","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.keymanager.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.keymanager.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargskeymanagerport","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.keymanager.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.keymanager.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 5053"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargskeymanagertoken-file","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.keymanager.token-file</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.keymanager.token-file\n</code></pre> <p>Parameter</p> Type Description Default string \"api-token.txt\""},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargslight-client-dataimport-mode","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.light-client-data.import-mode</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.light-client-data.import-mode\n</code></pre> <p>Parameter</p> Type Description Default one of \"none\", \"only-new\", \"full\", \"on-demand\" \"only-new\""},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargslight-client-datamax-periods","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.light-client-data.max-periods</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.light-client-data.max-periods\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargslight-client-dataserve","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.light-client-data.serve</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.light-client-data.serve\n</code></pre> <p>Parameter</p> Type Description Default boolean true"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargslisten-address","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.listen-address</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.listen-address\n</code></pre> <p>Parameter</p> Type Description Default string \"0.0.0.0\""},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsmax-peers","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.max-peers</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.max-peers\n</code></pre> <p>Parameter</p> Type Description Default string \"160\""},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsmetricsaddress","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.metrics.address</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.metrics.address\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsmetricsenable","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.metrics.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.metrics.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean true"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsmetricsport","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.metrics.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.metrics.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 5054"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsnat","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.nat</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.nat\n</code></pre> <p>Parameter</p> Type Description Default string \"any\""},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsnetwork","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.network</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.network\n</code></pre> <p>Parameter</p> Type Description Default one of \"mainnet\", \"prater\", \"sepolia\", \"holesky\", \"gnosis\", \"chiado\" \"name\""},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargspayload-builderenable","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.payload-builder.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.payload-builder.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargspayload-builderurl","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.payload-builder.url</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.payload-builder.url\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsrestaddress","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.rest.address</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.rest.address\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsrestallow-origin","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.rest.allow-origin</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.rest.allow-origin\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsrestenable","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.rest.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.rest.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsrestport","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.rest.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.rest.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 5052"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargstcp-port","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.tcp-port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.tcp-port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 9000"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargstrusted-node-url","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.trusted-node-url</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.trusted-node-url\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsudp-port","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.udp-port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.udp-port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 9000"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameargsuser","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.user</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.args.user\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupbtrfsenable","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.btrfs.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.btrfs.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupbtrfssnapshotdirectory","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.btrfs.snapshotDirectory</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.btrfs.snapshotDirectory\n</code></pre> <p>Parameter</p> Type Description Default path \"/snapshots\""},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupbtrfssnapshotretention","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.btrfs.snapshotRetention</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.btrfs.snapshotRetention\n</code></pre> <p>Parameter</p> Type Description Default signed integer 7"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupenable","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupmetadatainterval","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.metadata.interval</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.metadata.interval\n</code></pre> <p>Parameter</p> Type Description Default integer between 1 and 60 (both inclusive) 10"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupresticenvironmentfile","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupresticexclude","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupresticextraoptions","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupresticpasswordfile","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupresticrcloneconfig","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupresticrcloneconfigfile","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupresticrcloneoptions","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupresticrepository","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupresticrepositoryfile","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamebackupschedule","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.schedule</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.backup.schedule\n</code></pre> <p>Parameter</p> Type Description Default string \"hourly\""},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameenable","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameextraargs","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.extraArgs</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.extraArgs\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnameopenfirewall","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.openFirewall</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.openFirewall\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamepackage","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.package</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.package\n</code></pre> <p>Parameter</p> Type Description Default package pkgs.nimbus"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamerestoreenable","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamerestoreresticenvironmentfile","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamerestoreresticexclude","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamerestoreresticextraoptions","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamerestoreresticpasswordfile","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamerestoreresticrcloneconfig","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamerestoreresticrcloneconfigfile","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamerestoreresticrcloneoptions","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamerestoreresticrepository","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamerestoreresticrepositoryfile","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamerestoresnapshot","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.snapshot</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.snapshot\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/nimbus-beacon/#servicesethereumnimbus-beaconnamerestoretimeout","title":"<code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.timeout</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.nimbus-beacon.&lt;name&gt;.restore.timeout\n</code></pre> <p>Parameter</p> Type Description Default signed integer 600"},{"location":"nixos/modules/prysm-beacon/","title":"Prysm beacon","text":""},{"location":"nixos/modules/prysm-beacon/#_moduleargs","title":"<code>_module.args</code>","text":"<p>Snippet</p> <pre><code>_module.args\n</code></pre> <p>Parameter</p> Type Description Default lazy attribute set of raw value"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beacon","title":"<code>services.ethereum.prysm-beacon</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon\n</code></pre> <p>Parameter</p> Type Description Default attribute set of (submodule) { }"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargscheckpoint-sync-url","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.checkpoint-sync-url</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.checkpoint-sync-url\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsdatadir","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.datadir</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.datadir\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsdisable-grpc-gateway","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.disable-grpc-gateway</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.disable-grpc-gateway\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsdisable-monitoring","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.disable-monitoring</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.disable-monitoring\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsgenesis-beacon-api-url","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.genesis-beacon-api-url</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.genesis-beacon-api-url\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsgrpc-gateway-host","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.grpc-gateway-host</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.grpc-gateway-host\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsgrpc-gateway-port","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.grpc-gateway-port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.grpc-gateway-port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 3500"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsjwt-secret","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.jwt-secret</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.jwt-secret\n</code></pre> <p>Parameter</p> Type Description Default string null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsmonitoring-host","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.monitoring-host</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.monitoring-host\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsmonitoring-port","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.monitoring-port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.monitoring-port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 8080"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsnetwork","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.network</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.network\n</code></pre> <p>Parameter</p> Type Description Default null or one of \"holesky\", \"hoodi\", \"sepolia\" null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsp2p-tcp-port","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.p2p-tcp-port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.p2p-tcp-port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 13000"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsp2p-udp-port","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.p2p-udp-port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.p2p-udp-port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 12000"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargspprof","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.pprof</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.pprof\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargspprofaddr","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.pprofaddr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.pprofaddr\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargspprofport","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.pprofport</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.pprofport\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 6060"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsrpc-host","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.rpc-host</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.rpc-host\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsrpc-port","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.rpc-port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.rpc-port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 4000"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameargsuser","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.args.user</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.args.user\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupbtrfsenable","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.btrfs.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.btrfs.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupbtrfssnapshotdirectory","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.btrfs.snapshotDirectory</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.btrfs.snapshotDirectory\n</code></pre> <p>Parameter</p> Type Description Default path \"/snapshots\""},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupbtrfssnapshotretention","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.btrfs.snapshotRetention</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.btrfs.snapshotRetention\n</code></pre> <p>Parameter</p> Type Description Default signed integer 7"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupenable","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupmetadatainterval","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.metadata.interval</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.metadata.interval\n</code></pre> <p>Parameter</p> Type Description Default integer between 1 and 60 (both inclusive) 10"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticenvironmentfile","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticexclude","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticextraoptions","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticpasswordfile","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticrcloneconfig","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticrcloneconfigfile","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticrcloneoptions","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticrepository","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupresticrepositoryfile","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamebackupschedule","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.schedule</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.backup.schedule\n</code></pre> <p>Parameter</p> Type Description Default string \"hourly\""},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameenable","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameextraargs","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.extraArgs</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.extraArgs\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnameopenfirewall","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.openFirewall</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.openFirewall\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamepackage","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.package</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.package\n</code></pre> <p>Parameter</p> Type Description Default package pkgs.prysm"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamerestoreenable","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticenvironmentfile","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticexclude","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticextraoptions","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticpasswordfile","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticrcloneconfig","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticrcloneconfigfile","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticrcloneoptions","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticrepository","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamerestoreresticrepositoryfile","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamerestoresnapshot","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.snapshot</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.snapshot\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/prysm-beacon/#servicesethereumprysm-beaconnamerestoretimeout","title":"<code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.timeout</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-beacon.&lt;name&gt;.restore.timeout\n</code></pre> <p>Parameter</p> Type Description Default signed integer 600"},{"location":"nixos/modules/prysm-validator/","title":"Prysm validator","text":""},{"location":"nixos/modules/prysm-validator/#_moduleargs","title":"<code>_module.args</code>","text":"<p>Snippet</p> <pre><code>_module.args\n</code></pre> <p>Parameter</p> Type Description Default lazy attribute set of raw value"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validator","title":"<code>services.ethereum.prysm-validator</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator\n</code></pre> <p>Parameter</p> Type Description Default attribute set of (submodule) { }"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargsdatadir","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.datadir</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.datadir\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargsdisable-monitoring","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.disable-monitoring</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.disable-monitoring\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargsgraffiti","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.graffiti</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.graffiti\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargsgrpc-gateway-host","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.grpc-gateway-host</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.grpc-gateway-host\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargsgrpc-gateway-port","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.grpc-gateway-port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.grpc-gateway-port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 7500"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargsmonitoring-host","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.monitoring-host</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.monitoring-host\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargsmonitoring-port","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.monitoring-port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.monitoring-port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 8081"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargsnetwork","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.network</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.network\n</code></pre> <p>Parameter</p> Type Description Default null or one of \"holesky\", \"hoodi\", \"sepolia\" null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargsrpcenable","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.rpc.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.rpc.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargsrpchost","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.rpc.host</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.rpc.host\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargsrpcport","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.rpc.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.rpc.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 7000"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargssuggested-fee-recipient","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.suggested-fee-recipient</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.suggested-fee-recipient\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargsuser","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.user</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.user\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargswallet-dir","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.wallet-dir</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.wallet-dir\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameargswallet-password-file","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.args.wallet-password-file</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.args.wallet-password-file\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupbtrfsenable","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.btrfs.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.btrfs.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupbtrfssnapshotdirectory","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.btrfs.snapshotDirectory</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.btrfs.snapshotDirectory\n</code></pre> <p>Parameter</p> Type Description Default path \"/snapshots\""},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupbtrfssnapshotretention","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.btrfs.snapshotRetention</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.btrfs.snapshotRetention\n</code></pre> <p>Parameter</p> Type Description Default signed integer 7"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupenable","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupmetadatainterval","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.metadata.interval</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.metadata.interval\n</code></pre> <p>Parameter</p> Type Description Default integer between 1 and 60 (both inclusive) 10"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupresticenvironmentfile","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupresticexclude","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupresticextraoptions","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupresticpasswordfile","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupresticrcloneconfig","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupresticrcloneconfigfile","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupresticrcloneoptions","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupresticrepository","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupresticrepositoryfile","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamebackupschedule","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.backup.schedule</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.backup.schedule\n</code></pre> <p>Parameter</p> Type Description Default string \"hourly\""},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameenable","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameextraargs","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.extraArgs</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.extraArgs\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornameopenfirewall","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.openFirewall</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.openFirewall\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamepackage","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.package</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.package\n</code></pre> <p>Parameter</p> Type Description Default package pkgs.prysm"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamerestoreenable","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.restore.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.restore.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamerestoreresticenvironmentfile","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.environmentFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.environmentFile\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamerestoreresticexclude","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.exclude</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.exclude\n</code></pre> <p>Parameter</p> Type Description Default list of string [ \"**/LOCK\" \"keystore\" \"**/nodekey\" ]"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamerestoreresticextraoptions","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.extraOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.extraOptions\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamerestoreresticpasswordfile","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.passwordFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.passwordFile\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamerestoreresticrcloneconfig","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.rcloneConfig</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.rcloneConfig\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamerestoreresticrcloneconfigfile","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.rcloneConfigFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.rcloneConfigFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamerestoreresticrcloneoptions","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.rcloneOptions</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.rcloneOptions\n</code></pre> <p>Parameter</p> Type Description Default null or (attribute set of (string or boolean)) null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamerestoreresticrepository","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.repository</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.repository\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamerestoreresticrepositoryfile","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.repositoryFile</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.restore.restic.repositoryFile\n</code></pre> <p>Parameter</p> Type Description Default null or path null"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamerestoresnapshot","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.restore.snapshot</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.restore.snapshot\n</code></pre> <p>Parameter</p> Type Description Default string"},{"location":"nixos/modules/prysm-validator/#servicesethereumprysm-validatornamerestoretimeout","title":"<code>services.ethereum.prysm-validator.&lt;name&gt;.restore.timeout</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.prysm-validator.&lt;name&gt;.restore.timeout\n</code></pre> <p>Parameter</p> Type Description Default signed integer 600"},{"location":"nixos/modules/reth/","title":"Reth","text":""},{"location":"nixos/modules/reth/#_moduleargs","title":"<code>_module.args</code>","text":"<p>Snippet</p> <pre><code>_module.args\n</code></pre> <p>Parameter</p> Type Description Default lazy attribute set of raw value"},{"location":"nixos/modules/reth/#servicesethereumreth","title":"<code>services.ethereum.reth</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth\n</code></pre> <p>Parameter</p> Type Description Default attribute set of (submodule) { }"},{"location":"nixos/modules/reth/#servicesethereumrethnameargsauthrpcaddr","title":"<code>services.ethereum.reth.&lt;name&gt;.args.authrpc.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.authrpc.addr\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/reth/#servicesethereumrethnameargsauthrpcjwtsecret","title":"<code>services.ethereum.reth.&lt;name&gt;.args.authrpc.jwtsecret</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.authrpc.jwtsecret\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/reth/#servicesethereumrethnameargsauthrpcport","title":"<code>services.ethereum.reth.&lt;name&gt;.args.authrpc.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.authrpc.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 8551"},{"location":"nixos/modules/reth/#servicesethereumrethnameargschain","title":"<code>services.ethereum.reth.&lt;name&gt;.args.chain</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.chain\n</code></pre> <p>Parameter</p> Type Description Default one of \"mainnet\", \"sepolia\", \"holesky\", \"dev\" \"mainnet\""},{"location":"nixos/modules/reth/#servicesethereumrethnameargsdatadir","title":"<code>services.ethereum.reth.&lt;name&gt;.args.datadir</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.datadir\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/reth/#servicesethereumrethnameargsfull","title":"<code>services.ethereum.reth.&lt;name&gt;.args.full</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.full\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/reth/#servicesethereumrethnameargshttpaddr","title":"<code>services.ethereum.reth.&lt;name&gt;.args.http.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.http.addr\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/reth/#servicesethereumrethnameargshttpapi","title":"<code>services.ethereum.reth.&lt;name&gt;.args.http.api</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.http.api\n</code></pre> <p>Parameter</p> Type Description Default null or (list of string)"},{"location":"nixos/modules/reth/#servicesethereumrethnameargshttpcorsdomain","title":"<code>services.ethereum.reth.&lt;name&gt;.args.http.corsdomain</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.http.corsdomain\n</code></pre> <p>Parameter</p> Type Description Default null or (list of string) null"},{"location":"nixos/modules/reth/#servicesethereumrethnameargshttpenable","title":"<code>services.ethereum.reth.&lt;name&gt;.args.http.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.http.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean true"},{"location":"nixos/modules/reth/#servicesethereumrethnameargshttpport","title":"<code>services.ethereum.reth.&lt;name&gt;.args.http.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.http.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 8545"},{"location":"nixos/modules/reth/#servicesethereumrethnameargslogfiledirectory","title":"<code>services.ethereum.reth.&lt;name&gt;.args.log.file.directory</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.log.file.directory\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/reth/#servicesethereumrethnameargslogfilefilter","title":"<code>services.ethereum.reth.&lt;name&gt;.args.log.file.filter</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.log.file.filter\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/reth/#servicesethereumrethnameargslogfileformat","title":"<code>services.ethereum.reth.&lt;name&gt;.args.log.file.format</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.log.file.format\n</code></pre> <p>Parameter</p> Type Description Default null or one of \"terminal\", \"log-fmt\", \"json\" null"},{"location":"nixos/modules/reth/#servicesethereumrethnameargslogjournaldfilter","title":"<code>services.ethereum.reth.&lt;name&gt;.args.log.journald.filter</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.log.journald.filter\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/reth/#servicesethereumrethnameargslogstdoutfilter","title":"<code>services.ethereum.reth.&lt;name&gt;.args.log.stdout.filter</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.log.stdout.filter\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/reth/#servicesethereumrethnameargslogstdoutformat","title":"<code>services.ethereum.reth.&lt;name&gt;.args.log.stdout.format</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.log.stdout.format\n</code></pre> <p>Parameter</p> Type Description Default null or one of \"terminal\", \"log-fmt\", \"json\" null"},{"location":"nixos/modules/reth/#servicesethereumrethnameargsmetricsaddr","title":"<code>services.ethereum.reth.&lt;name&gt;.args.metrics.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.metrics.addr\n</code></pre> <p>Parameter</p> Type Description Default string \"127.0.0.1\""},{"location":"nixos/modules/reth/#servicesethereumrethnameargsmetricsenable","title":"<code>services.ethereum.reth.&lt;name&gt;.args.metrics.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.metrics.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/reth/#servicesethereumrethnameargsmetricsport","title":"<code>services.ethereum.reth.&lt;name&gt;.args.metrics.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.metrics.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 6060"},{"location":"nixos/modules/reth/#servicesethereumrethnameargsport","title":"<code>services.ethereum.reth.&lt;name&gt;.args.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.port\n</code></pre> <p>Parameter</p> Type Description Default 16 bit unsigned integer; between 0 and 65535 (both inclusive) 30303"},{"location":"nixos/modules/reth/#servicesethereumrethnameargswsaddr","title":"<code>services.ethereum.reth.&lt;name&gt;.args.ws.addr</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.ws.addr\n</code></pre> <p>Parameter</p> Type Description Default null or string null"},{"location":"nixos/modules/reth/#servicesethereumrethnameargswsapi","title":"<code>services.ethereum.reth.&lt;name&gt;.args.ws.api</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.ws.api\n</code></pre> <p>Parameter</p> Type Description Default null or (list of string) null"},{"location":"nixos/modules/reth/#servicesethereumrethnameargswsenable","title":"<code>services.ethereum.reth.&lt;name&gt;.args.ws.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.ws.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/reth/#servicesethereumrethnameargswsorigins","title":"<code>services.ethereum.reth.&lt;name&gt;.args.ws.origins</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.ws.origins\n</code></pre> <p>Parameter</p> Type Description Default null or (list of string) null"},{"location":"nixos/modules/reth/#servicesethereumrethnameargswsport","title":"<code>services.ethereum.reth.&lt;name&gt;.args.ws.port</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.args.ws.port\n</code></pre> <p>Parameter</p> Type Description Default null or 16 bit unsigned integer; between 0 and 65535 (both inclusive) null"},{"location":"nixos/modules/reth/#servicesethereumrethnameenable","title":"<code>services.ethereum.reth.&lt;name&gt;.enable</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.enable\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/reth/#servicesethereumrethnameextraargs","title":"<code>services.ethereum.reth.&lt;name&gt;.extraArgs</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.extraArgs\n</code></pre> <p>Parameter</p> Type Description Default list of string [ ]"},{"location":"nixos/modules/reth/#servicesethereumrethnameopenfirewall","title":"<code>services.ethereum.reth.&lt;name&gt;.openFirewall</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.openFirewall\n</code></pre> <p>Parameter</p> Type Description Default boolean false"},{"location":"nixos/modules/reth/#servicesethereumrethnamepackage","title":"<code>services.ethereum.reth.&lt;name&gt;.package</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.package\n</code></pre> <p>Parameter</p> Type Description Default package pkgs.reth"},{"location":"nixos/modules/reth/#servicesethereumrethnamesubvolume","title":"<code>services.ethereum.reth.&lt;name&gt;.subVolume</code>","text":"<p>Snippet</p> <pre><code>services.ethereum.reth.&lt;name&gt;.subVolume\n</code></pre> <p>Parameter</p> Type Description Default boolean false"}]}